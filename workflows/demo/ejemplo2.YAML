# wflow_orch.yaml
# ==================================================
# --------------------------------------------------

main:
    params: [input]
    steps:
    - InitVariables:
        assign:
            - bq_project_id: [project_id]
            - bq_date: ${input.date}

    - load_bq_bi_sales_store:
        call: SyncBigQueryJob
        args:
            query: ${"CALL `"+bq_project_id+".raw_taller_ventas.sp_load_bi_sales_store`('"+bq_date+"')"}
            project_id: ${bq_project_id}
        result: queryResult

    - load_bq_raw_tipo_cambio:
        call: SyncBigQueryJob
        args:
            query: ${"CALL `"+bq_project_id+".raw_taller_ventas.sp_load_exchange_rate`()"}
            project_id: ${bq_project_id}
        result: queryResult
        

        
SyncBigQueryJob:
    params: [query, project_id]
    steps:
        - JobQuery:
            call: googleapis.bigquery.v2.jobs.query
            args:
                projectId: ${project_id}
                body:
                    query: ${query}
                    useLegacySql: false
            result: jobQueryResponse
        - JobWait:
            call: BigQueryJobState
            args:
                job_id: ${jobQueryResponse.jobReference.jobId}
                project_id: ${project_id}
            result: BigQueryJobStateResponse
        - SyncBigQueryJobResponse:
            return: ${BigQueryJobStateResponse}

BigQueryJobState:
    params: [job_id, project_id]
    steps:
        - Sleep:
            call: sys.sleep
            args:
                seconds: 30    
        - JobInfo:
            call: googleapis.bigquery.v2.jobs.get
            args:
                jobId: ${job_id}
                projectId: ${project_id}
            result: jobGetResponse
        - JobRunningCheck:
            switch:
              - condition: ${jobGetResponse.status.state == "RUNNING"}
                next: Sleep          
              - condition: ${jobGetResponse.status.state == "DONE"}
                next: WorkflowDone            
        - WorkflowDone:
            switch:
              - condition: ${"errorResult" in jobGetResponse.status}
                raise: ${jobGetResponse}
        - BigQueryJobStateResponse:
            return: ${jobGetResponse}   
